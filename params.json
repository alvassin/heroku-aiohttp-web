{
  "name": "Heroku aiohttp Web Template",
  "tagline": "A project starter template for deploying an aiohttp app to Heroku",
  "body": "Heroku aiohttp Web Template\r\n===========================\r\n\r\nAn opinionated project template for deploying an [aiohttp](https://github.com/KeepSafe/aiohttp/)\r\nweb app to Heroku, designed to encourage the rapid development and deployment of real-time\r\nfront-end features.\r\n\r\n**NB:** _This remains a work-in-progress. Please tread carefully._\r\n\r\nLaunch the app\r\n--------------\r\n\r\nUse this button:\r\n\r\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://dashboard.heroku.com/new?button-url=https%3A%2F%2Fgithub.com/sseg/heroku-aiohttp-template&template=https%3A%2F%2Fgithub.com/sseg/heroku-aiohttp-template)\r\n\r\nOr alternatively:\r\n\r\n    $ git clone git@github.com:sseg/heroku-aiohttp-web.git\r\n    $ cd heroku-aiohttp-web\r\n    $ heroku create\r\n    $ heroku buildpacks:set https://github.com/heroku/heroku-buildpack-multi.git\r\n    $ heroku config:set ROOT_LOG_LEVEL=INFO\r\n    $ git push heroku master\r\n\r\n\r\nDevelop locally\r\n---------------\r\n\r\nMake sure you have:\r\n\r\n- a Python 3.5+ virtual environment ([venv](https://docs.python.org/3/library/venv.html))\r\n- [node](https://nodejs.org/en/) version 4.5+ with `npm`\r\n- the Heroku CLI tools [Heroku Toolbelt](https://toolbelt.heroku.com)\r\n\r\nInstall the project packages:\r\n\r\n    $ pip install -r dev-requirements.txt\r\n    $ pip-sync\r\n    $ npm install -g brunch\r\n    $ npm install\r\n\r\nThen run the project with development asset server:\r\n\r\n    $ chmod +x ./dev_start.sh `# run this just once`\r\n    $ ./dev_start.sh\r\n\r\nOr run the app using compiled assets with the Procfile:\r\n\r\n    $ npm run clean && npm run build:prod\r\n    $ heroku local\r\n\r\nLocal config values are defined in the `.env` file, and invoked when you start\r\nthe application using `heroku local`.\r\n\r\n### Run the tests\r\n\r\nThere are no tests yet... but stay tuned!\r\n\r\n\r\nApplication structure\r\n---------------------\r\n\r\n#### Handlers\r\n\r\n_aiohttp_ dispatches requests to handlers which can be either coroutines or functions\r\nthat accept a [Request](http://aiohttp.readthedocs.io/en/stable/web_reference.html#aiohttp.web.Request) and return a [Response](http://aiohttp.readthedocs.io/en/stable/web_reference.html#aiohttp.web.Response). A base class\r\n[aiohttp.web.View](http://aiohttp.readthedocs.io/en/stable/web_reference.html#aiohttp.web.View)\r\nis also provided to help organize handlers into classes, which provides the convenience of\r\nautomatically creating an OPTIONS method.  \r\n\r\n#### Templates\r\n\r\nThis app uses [jinja2](http://jinja.pocoo.org/) templates to construct its index\r\nview. Template files are kept in the _web/templates_ directory and compiled by\r\nthe [aiohttp_jinja2](https://github.com/aio-libs/aiohttp_jinja2) renderer. You might\r\nprefer [mako](https://github.com/aio-libs/aiohttp_mako) for templates, or\r\n[something](https://wiki.python.org/moin/Templating)\r\n[else](https://docs.python.org/3/library/string.html#template-strings)â€”connecting\r\na new renderer to your handlers is easy.\r\n\r\n#### Static files\r\n\r\nJavascript and CSS source files are defined in the _assets/js_\r\nand _assets/css_ directories, respectively. These assets are compiled by\r\n[brunch](http://brunch.io/) to the top-level _public_ directory (configuration\r\nin _brunch-config.js_). You might want to add React or Elm compilation which is\r\nas simple as installing a new [brunch plugin](http://brunch.io/plugins). In\r\ndevelopment you can run a file watcher with an HTTP + pushstate server to reload\r\nyour page on file changes (this is started with the *dev_start.sh* script).\r\n\r\n##### Production asset delivery\r\n\r\nIn production the assets are compiled once (triggered during Heroku deployment by\r\n_package.json_'s postinstall directive). Based on the Python configuration the compiled\r\nassets are served through _aiohttp_ (with the piping handled by\r\n_web.utils.assets.AssetManager_).\r\n\r\n**NB:** the _aiohttp_ server is not designed to serve static files, and allowing\r\nit to serve production asset traffic will detrimentally affect your application's\r\nperformance. You will either want to expose this application behind a content\r\ndelivery proxy (e.g. [Cloudflare](https://www.cloudflare.com/)) or reconfigure it\r\nto serve assets from a separate assets server. The _brunch_ asset compiler is\r\nconfigured here to append checksum digests to asset filenames which facilitates\r\ncache eviction in these scenarios.\r\n\r\n#### Configuration\r\n\r\nThis application uses a configuration base file, _config/web.yml_, which defines\r\ndefaults and wraps environment variables. New configuration settings should be added\r\nto this file and refer to new environment variables. For more information on Heroku\r\napp configuration see the [devcenter](https://devcenter.heroku.com/articles/config-vars)\r\ndocs.\r\n\r\n\r\nContributions\r\n-------------\r\n\r\nContributions are welcome! Bugs, feature requests, and unanswered questions can be\r\nreported in the Github issue tracker [here](https://github.com/sseg/heroku-aiohttp-web/issues).\r\nFixes, enhancements, and suggestions are also gratefully accepted in pull requests.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}